/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'xingle' at '16-4-12 下午8:29' with Gradle 2.12
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */

group 'com.sun'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }
}

// 44.2. A basic Java project
// Apply the java plugin to add support for Java
apply plugin: 'java'

jar {
    baseName = 'Effective_Java'
    version = '1.0-SNAPSHOT'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

// 44.2.2. External dependencies
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// Example 44.4. Adding dependencies
// In this section you declare the dependencies for your production and test code
dependencies {

    // ============ Logging（日志记录） ============
    // Logback - http://logback.qos.ch/
    // Documentation - http://logback.qos.ch/documentation.html
    // Reasons to prefer logback over log4j - http://logback.qos.ch/reasonsToSwitch.html
    compile 'ch.qos.logback:logback-classic:1.1.7'

    // The production code uses the SLF4J logging API at compile time
    // SLF4J: Simple Logging Facade for Java - http://www.slf4j.org/
    // User Manual - http://www.slf4j.org/manual.html
    // Documentation - http://www.slf4j.org/docs.html
//    compile 'org.slf4j:slf4j-api:1.7.18'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
//    testCompile 'junit:junit:4.12'

    // TestNG - http://testng.org/doc/index.html
    // Documentation - http://testng.org/doc/documentation-main.html
    testCompile 'org.testng:testng:6.9.10'

    // AssertJ - http://joel-costigliola.github.io/assertj/
    // Quick start - http://joel-costigliola.github.io/assertj/assertj-core-quick-start.html
    // use 3.4.0 for Java 8 projects
    testCompile 'org.assertj:assertj-core:2.4.0'

    // Mockito - http://site.mockito.org/
    // Mockito API - http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html
//    testCompile 'org.mockito:mockito-core:1.10.19'
}

// Test Task (Gradle DSL Reference) - https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html
// adds 'test' task
test {
    // enable TestNG support (default is JUnit)
    useTestNG()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}

// Building Java Projects with Gradle - http://spring.io/guides/gs/gradle/
// Build your project with Gradle Wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
